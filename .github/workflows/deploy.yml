name: 🚀 Deploy
on:
  push:
    branches:
      - main
      - dev
  pull_request: {}
permissions:
  actions: write
  contents: read

jobs:
  lint:
    name: ⬣ ESLint
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1
        with:
          useLockFile: false

      - name: 🔬 Lint
        run: npm run lint

  typecheck:
    name: ʦ TypeScript
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1
        with:
          useLockFile: false

      - name: 🔎 Type check
        run: npm run typecheck --if-present

  vitest:
    name: ⚡ Vitest
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: 🏄 Copy test env vars
        run: cp .env.example .env.test

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 19

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1
        with:
          useLockFile: false

      - name: 🐳 Docker compose
        # the sleep is just there to give time for postgres to get started
        run: docker compose up -d && sleep 3
        env:
          DATABASE_URL: 'postgresql://postgres:postgres@localhost:5432/thebabblesclub_test'

      - name: ⚡ Run vitest
        run: npm run test

  build:
    name: 🐳 Build
    # only build/deploy main branch on pushes
    if:
      ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') &&
      github.event_name == 'push' }}
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Setup cache
      - name: ⚡️ Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: 🔓 Login to Vultr Container Registry
        uses: docker/login-action@v3
        with:
          registry: sjc.vultrcr.com/chrisparsons
          username: ${{ secrets.VULTR_USERNAME }}
          password: ${{ secrets.VULTR_API_KEY }}

      - name: 🗄️ Save to Vultr Container Registry
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: sjc.vultrcr.com/chrisparsons/thebabblesclub:latest
          # cache-from: type=registry,ref=sjc.vultrcr.com/chrisparsons/thebabblesclub:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          build-args: |
            DATABASE_URL=${{ secrets.DATABASE_URL }}

      # This ugly bit is necessary if you don't want your cache to grow forever
      # till it hits GitHub's limit of 5GB.
      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: 🚚 Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    needs: [lint, typecheck, vitest, build]
    # only deploy main/dev branch on pushes
    if:
      ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') &&
      github.event_name == 'push' }}

    steps:
      - name: Deploy app to Vultr VPS
        uses: appleboy/ssh-action@master
        env:
          VULTR_USERNAME: ${{ secrets.VULTR_USERNAME }}
          VULTR_API_KEY: ${{ secrets.VULTR_API_KEY }}
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          port: ${{ secrets.DEPLOY_PORT }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          envs: VULTR_USERNAME, VULTR_API_KEY
          script: |
            docker login sjc.vultrcr.com/chrisparsons -u $VULTR_USERNAME -p $VULTR_API_KEY && cd thebabblesclub && docker compose pull && docker compose up -d
